diff --git a/qemu_mode/qemu-8.2.0/linux-user/syscall.c b/qemu_mode/qemu-8.2.0/linux-user/syscall.c
index e384e14..8133bf9 100644
--- qemu-8.2.0/linux-user/syscall.c
+++ qemu-8.2.0/linux-user/syscall.c
@@ -144,6 +144,8 @@
 #include "fd-trans.h"
 #include "cpu_loop-common.h"
 
+extern unsigned int afl_forksrv_pid;
+
 #ifndef CLONE_IO
 #define CLONE_IO                0x80000000      /* Clone io context */
 #endif
@@ -12671,9 +12673,19 @@ static abi_long do_syscall1(CPUArchState *cpu_env, int num, abi_long arg1,
         return get_errno(safe_tkill((int)arg1, target_to_host_signal(arg2)));
 
     case TARGET_NR_tgkill:
-        return get_errno(safe_tgkill((int)arg1, (int)arg2,
-                         target_to_host_signal(arg3)));
+    {
+        int pid  = (int)arg1,
+            tgid = (int)arg2,
+            sig  = (int)arg3;
+
+        /* Not entirely sure if the below is correct for all architectures. */
 
+        if(afl_forksrv_pid && afl_forksrv_pid == pid && sig == SIGABRT)
+            pid = tgid = getpid();
+
+        return get_errno(safe_tgkill(pid, tgid, target_to_host_signal(sig)));
+    }
+        
 #ifdef TARGET_NR_set_robust_list
     case TARGET_NR_set_robust_list:
     case TARGET_NR_get_robust_list:
